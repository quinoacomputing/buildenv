# vim: filetype=dockerfile:
FROM debian:stable

# Install system-wide prerequisites
RUN apt-get update -y && apt-get install -y git cmake gcc gfortran g++ openmpi-bin libopenmpi-dev ninja-build m4 autoconf libpugixml-dev libpstreams-dev libboost-all-dev libblas-dev liblapack-dev liblapacke-dev zlib1g-dev libhdf5-dev libhdf5-openmpi-dev binutils-dev libx11-dev libxpm-dev libxft-dev libxext-dev libdw-dev libdwarf-dev gmsh vim

# To avoid the charmrun warning: Randomization of virtual memory (ASLR) is turned on in the kernel, thread migration may not work!
RUN echo 0 > /proc/sys/kernel/randomize_va_space

# User configuration
RUN adduser --gecos "" --disabled-password quinoa
USER quinoa
WORKDIR /home/quinoa
CMD ["/bin/bash"]

# Clone quinoa
RUN git clone --recurse-submodules http://github.com/quinoacomputing/quinoa.git
# Checkout commit to be tested
ARG COMMIT
RUN cd quinoa && git checkout $COMMIT && git log -1 HEAD
# Update submodules
RUN cd quinoa && git submodule init && git submodule update --recursive && cd external && git submodule init && git submodule update --recursive && cd .. && git submodule status --recursive
# Build TPLs
RUN mkdir -p quinoa/external/build && cd quinoa/external/build && cmake -DENABLE_ROOT=true -DENABLE_OMEGA_H=true -DENABLE_DOXYGEN=false -DENABLE_MCSS=false -DCHARM_EXTRA_ARGS="smp" -DCMAKE_INSTALL_PREFIX=/home/quinoa/external/gnu-smp -DCXXFLAGS=-w .. && make -sj$(grep -c processor /proc/cpuinfo)

# Build code, run tests (comment this when verified, before docker push)
#RUN mkdir -p quinoa/build && cd quinoa/build && cmake -DCMAKE_CXX_FLAGS=-Werror -DTPL_DIR=/home/quinoa/external/gnu-smp -GNinja -DRUNNER=mpirun -DRUNNER_NCPUS_ARG=-n -DRUNNER_ARGS="--bind-to none -oversubscribe" ../src && ninja && npes=$(grep -c processor /proc/cpuinfo) && mpirun -n 2 --bind-to none -oversubscribe Main/unittest -v -q +ppn $((($npes-2)/2)) && ctest -j $npes --output-on-failure -LE extreme

# Clean, keep TPLs
RUN rm -rf quinoa
